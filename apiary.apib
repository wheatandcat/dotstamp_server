FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# dotstamp_server

Polls is a simple API allowing consumers to view polls and vote in them.

## bug [/bug]

### バグを報告する [POST]

+ Request (application/x-www-form-urlencoded)

        {
            "body": "foo"
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                warning: false,
                message: ""
            }

## characters [/character]

### キャラクタを取得する [GET]

+ Response 200 (application/json)

    + Body

            {
                images: [
                    {
                        "id": 1,
                        "characterID": 1,
                        "priority": 1,
                        "voiceType": 1,
                        "fileName": "1.jpg"
                    }
                ]
            }

### キャラクタをアップロードする [POST]

+ Request  (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                images: [
                    {
                        "id": 1,
                        "characterID": 1,
                        "priority": 1,
                        "voiceType": 1,
                        "fileName": "1.jpg"
                    }
                ]
            }
            
### キャラクタを更新する [PUT]

+ Request (application/x-www-form-urlencoded)

        {
            "id": 1,
            "voiceType": 1,
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

## characters/{id} [/character/{id}]
    
+ Parameters
    + id - 投稿ID

### キャラクタを削除する [DELETE]

+ Response 200 (application/json)

    + Body

            {
                images: [
                    {
                        "id": 1,
                        "characterID": 1,
                        "priority": 1,
                        "voiceType": 1,
                        "fileName": "1.jpg"
                    }
                ]
            }

## contributions/upload{?id} [/contribution/upload{?id}]

## contributions/{id} [/contribution/{id}]
    
+ Parameters
    + id - 投稿ID

### 投稿を取得する [GET]

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "user": {
                    "id": 1,
                    "name": "foo",
                    "profileImageID": 1
                },
                "title": "foo",
                "tag": [
                    {
                        "id": 1,
                        "userContributionID": 1,
                        "name": 1
                    }
                ],
                "followCount": 1,
                "body": [
                    {
                        "priority": 1,
                        "body": "foo",
                        "directionType": 1,
                        "character": {
                            "id": 1,
                            "fileName": "foo",
                            "voiceType": 1
                        }
                    }
                ],
                "viewStatus": 1,
                "search": "foo",
                "soundStatus": 1,
                "movie": {
                    "user_contribution_id": 1,
                    "movie_type": 1,
                    "movie_id": "foo",
                    "movie_status": 1,
                    "CreatedAt": "2017-04-24T22:45:00+09:00",
                    "DeletedAt": NULL,
                    "UpdatedAt": "2017-04-24T22:45:00+09:00"
                },
                "createdAt": "2017-04-24T22:45:00+09:00",
                "updatedAt": "2017-04-24T22:45:00+09:00",
                "following": true,
                "soundFile": true
            }

### 投稿を更新する [PUT]

+ Request (application/x-www-form-urlencoded)

        {
            "title": "foo",
            "body": "{[投稿データ]}",
            "viewStatus": 1,
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "{id}"
            }
            
### 投稿を削除する [DELETE]

+ Response 200 (application/json)

    + Body

            {
                true
            }

## contributions/new [/contribution/new]

### 投稿を作成する [POST]

+ Request (application/x-www-form-urlencoded)

        {
            "title": "foo",
            "body": "{[投稿データ]}",
            "viewStatus": 1,
            "tag": "foo,bar,foobar"
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "{id}"
            }
            
## contributions/list [/contribution/list]

### 投稿リストを取得する [GET]

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "user": {
                    "id": 1,
                    "name": "foo",
                    "profileImageID": 1
                },
                "title": "foo",
                "tag": [
                    {
                        "id": 1,
                        "userContributionID": 1,
                        "name": 1
                    }
                ],
                "followCount": 1,
                "body": [
                    {
                        "priority": 1,
                        "body": "foo",
                        "directionType": 1,
                        "character": {
                            "id": 1,
                            "fileName": "foo",
                            "voiceType": 1
                        }
                    }
                ],
                "viewStatus": 1,
                "search": "foo",
                "soundStatus": 1,
                "movie": {
                    "user_contribution_id": 1,
                    "movie_type": 1,
                    "movie_id": "foo",
                    "movie_status": 1,
                    "CreatedAt": "2017-04-24T22:45:00+09:00",
                    "DeletedAt": NULL,
                    "UpdatedAt": "2017-04-24T22:45:00+09:00"
                },
                "createdAt": "2017-04-24T22:45:00+09:00",
                "updatedAt": "2017-04-24T22:45:00+09:00"
            }
        ]

## contributions/edit/{id} [/contribution/edit/{id}]

+ Parameters
    + id - 投稿ID

### 投稿の編集情報を取得する [GET]

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "user": {
                    "id": 1,
                    "name": "foo",
                    "profileImageID": 1
                },
                "title": "foo",
                "tag": [
                    {
                        "id": 1,
                        "userContributionID": 1,
                        "name": 1
                    }
                ],
                "followCount": 1,
                "body": [
                    {
                        "priority": 1,
                        "body": "foo",
                        "directionType": 1,
                        "character": {
                            "id": 1,
                            "fileName": "foo",
                            "voiceType": 1
                        }
                    }
                ],
                "viewStatus": 1,
                "search": "foo",
                "soundStatus": 1,
                "movie": {
                    "user_contribution_id": 1,
                    "movie_type": 1,
                    "movie_id": "foo",
                    "movie_status": 1,
                    "CreatedAt": "2017-04-24T22:45:00+09:00",
                    "DeletedAt": NULL,
                    "UpdatedAt": "2017-04-24T22:45:00+09:00"
                },
                "createdAt": "2017-04-24T22:45:00+09:00",
                "updatedAt": "2017-04-24T22:45:00+09:00",
                "sound": true,
                "soundFile": true
            }

## contributions/search [/contribution/search]

### 検索する [POST]

+ Request (application/x-www-form-urlencoded)

        {
            "search": "foo",
            "order": 1,
            "page": 1,
            "limit": 1
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                list: [
                    {"投稿情報"}
                ],
                count: 1,
            }
            
## contributions/upload/{?id} [/contribution/upload/{?id}]

+ Parameters
    + id -投稿ID

### 画像をアップロードする [POST]

+ Request  (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                warning: false,
                message: "",
                path: "14.jpg",
            }

## follows/{id} [/follow/{id}]

+ Parameters
    + id - 投稿ID

### フォローする [POST]

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": "",
                "followCount": 1
            }

### フォローを削除する [DELETE]

+ Response 200 (application/json)

    + Body

            {
                "warning": false,
                "message": "",
                "followCount": 0
            }

## follows/list [/follow/list]

### フォローリストを取得する [POST]

+ Request (application/x-www-form-urlencoded)

        {
            "order": 1,
            "page": 1,
            "limit": 1
        }

+ Response 200 (application/json)


        {
            "list": [
                "{投稿データ}"
            ],
            count: 1
        }

## forget_password [/forget_password]

### パスワード変更を登録する [POST]

+ Request (application/x-www-form-urlencoded)

        {
            "email": "foo@bar.com",
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

### パスワードを変更する [PUT]

+ Request (application/x-www-form-urlencoded)

        {
            "email": "foo@bar.com",
            "keyword": "********",
            "password": "*********"
        }

+ Response 200 (application/json)

    + Body

            {
                "warning": false,
                "message": ""
            }

## forget_password/check/{email}/{keyword} [/forget_password/check/{email}/{keyword}]

+ Parameters
    + email - メールアドレス
    + keyword - キーワード

### パスワード変更可能を判定する [GET]

+ Response 200 (application/json)

    + Body

            {
                "warning": false,
                "message": ""
            }

## login/auth [/login/auth]

### ログインする [POST]

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "login": true,
                "name": "foo"
            }

## login/check [/login/check]

### ログイン済みを判定する [POST]


+ Request (application/x-www-form-urlencoded)

        {
            "email": "foo@bar.com",
            "password": "******"
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                true
            }

## logout [/logout]

### ログアウトする [POST]

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                true
            }

## movies/{id} [/movies/{id}]

+ Parameters
    + id - 投稿ID

### 動画を確認する [GET]

+ Response 200 (application/json)

    + Body

            {
                "warning": false,
                "message": ""
            }

### 動画を作成する [POST]

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": "",
                "movieStatus": 1
            }

## movies/{id}/upload [/movies/{id}/upload]

+ Parameters
    + id - 投稿ID

### 動画をアップロードする [POST]

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": "",
                "movieID" "foo"
            }


## problem [/problem]

### 問題を報告する [POST]


+ Request (application/x-www-form-urlencoded)

        {
            "id": 1,
            "type": 1
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

## profile [/profile]

### 画像をアップロードする [POST]


+ Request  (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY


+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "1.jpg"
            }

## question [/question]

### 問い合わせる [POST]


+ Request (application/x-www-form-urlencoded)

        {
            "email": "foo@bar.com",
            "body": "foo"
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }


## sounds/{id} [/sounds/{id}]

+ Parameters
    + id - 投稿ID

### 音声を確認する [GET]

+ Response 200 (application/json)

    + Body

            {
                "list": [
                    {
                        "user_contribution_id": 1,
                        "priority": 1,
                        "talk_type": 1,
                        "body": "foo",
                        "body_sound": "foo",
                        "voice_type": 1,
                        "make_status": 1
                    }
                ],
                "soundStatus": 1,
                "soundFile": true,
                "movieFile": true,
                "movie": {
                    "user_contribution_id": 1,
                    "movie_type": 1,
                    "movie_id": "foo",
                    "movie_status": 1
                }
            }

### 音声を反映する [POST]

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

### 音声を更新する [PUT]


+ Request (application/x-www-form-urlencoded)

        {
            "soundStatus": 1,
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

## sounds/{id}/make [/sounds/{id}/make]

+ Parameters
    + id - 投稿ID

### 音声を作成する [POST]

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

## sounds/{id}/reflect [/sounds/{id}/reflect]

+ Parameters
    + id - 投稿ID

### 音声を再構築する [POST]


+ Request (application/x-www-form-urlencoded)

        {
            "overwrite": true,
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

## sounds/body [/sounds/body]

### 音声文を更新する [PUT]


+ Request (application/x-www-form-urlencoded)

        {
            "id": 1,
            "body": "foo"
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": "",
                "id": 1
            }

## sounds/voice [/sounds/voice]

### 音声タイプを更新する [PUT]


+ Request (application/x-www-form-urlencoded)

        {
            "id": 1,
            "voice_type": 1
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": "",
                "id": 1
            }


## sounds/{id}/voice/all [/sounds/{id}/voice/all]

+ Parameters
    + id - 投稿ID

### 音声タイプを一括更新する [PUT]


+ Request (application/x-www-form-urlencoded)

        {
            "voice_type": 1
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": ""
            }

## sounds/length [/sounds/length]

### 時間を取得する [GET]

+ Response 200 (application/json)

    + Body

            {
                "character": 0.34
            }

## users/new [/users/new]

### ユーザを登録する [POST]

+ Request (application/x-www-form-urlencoded)

        {
            "email": "foo@bar.com",
            "password": "******"
        }

+ Response 200 (application/x-www-form-urlencoded)

    + Body

            {
                "warning": false,
                "message": "",
                "userID": 1
            }